# Orchestrator Software Templates Chart for Red Hat Developer Hub

{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}
{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

## Overview

This Helm chart deploys the Orchestrator Software Templates for Red Hat Developer Hub (RHDH). It creates the necessary configurations and resources to enable orchestrator functionality within RHDH, including:

- Software template configurations for RHDH integration
- Tekton pipelines and tasks for workflow orchestration
- ArgoCD project configurations for GitOps workflows
- Authentication and catalog configurations for various SCM providers (GitHub, GitLab)

## Prerequisites

Before installing this chart, ensure you have installed the following:

0. Orchestrator-infra chart: responsible for installing necessary resources for Orchestrator to work.
1. Backstage chart: responsible for **Red Hat Developer Hub** and Orchestrator. It should be deployed and configured with Orchestrator enabled. 
2. Orchestrator-software-templates-infra chart: responsible for deploying **OpenShift Pipelines** (Tekton) operator and **OpenShift GitOps** (ArgoCD) operator. It should be deployed in the same namespace as the backstage chart.
3. Running the setup script: responsible for creating the required secret for the software templates chart.
4. Optional: To make full use of ArgoCD and Tekton, you must following the instruction to configure the docker secret and ssh credentials, here: https://github.com/rhdhorchestrator/orchestrator-go-operator/blob/main/docs/gitops/README.md.
5. Label the RHDH namespace with `oc label ns rhdh rhdh.redhat.com/argocd-namespace=true` to enable the configuration sync.


The chart requires a secret named `orchestrator-auth-secret` in the RHDH namespace containing the following keys:

- `BACKEND_SECRET`: Backend authentication secret
- `K8S_CLUSTER_TOKEN`: Kubernetes cluster token
- `K8S_CLUSTER_URL`: Kubernetes cluster URL
- `GITHUB_TOKEN`: GitHub access token (optional)
- `GITHUB_CLIENT_ID`: GitHub OAuth client ID (optional)
- `GITHUB_CLIENT_SECRET`: GitHub OAuth client secret (optional)
- `GITLAB_HOST`: GitLab host URL (optional)
- `GITLAB_TOKEN`: GitLab access token (optional)
- `ARGOCD_URL`: ArgoCD server URL (optional)
- `ARGOCD_USERNAME`: ArgoCD username (optional)
- `ARGOCD_PASSWORD`: ArgoCD password (optional)

Acquire the following ArgoCD:

ARGOCD_URL: https://argocd-server.<apps.example.com>
ARGOCD_USERNAME: admin
ARGOCD_PASSWORD: `oc get secret -n openshift-gitops openshift-gitops-cluster -o jsonpath='{.data.admin\.password}' | base64 -d`

The secret can be created by the setup script or manually

```bash
oc create secret generic orchestrator-auth-secret \
  -n rhdh \
  --from-literal=BACKEND_SECRET=your-backend-secret \
  --from-literal=K8S_CLUSTER_TOKEN=your-k8s-token \
  --from-literal=K8S_CLUSTER_URL=https://your-cluster-url \
  --from-literal=GITHUB_TOKEN=your-github-token
```

## Installation

After configuring all prerequisites, you can install the chart with the following command:

```console
helm repo add redhat-developer https://redhat-developer.github.io/rhdh-chart

helm install my-orchestrator-templates redhat-developer/orchestrator-software-templates
```

Now, follow the instruction on the Post-installation Notes. 



## Uninstalling the Chart

To uninstall/delete a Helm release named `orchestrator-templates`:

```console
helm uninstall orchestrator-templates
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

## Troubleshooting

### Common Issues

1. **Secret not found error**: Ensure the `orchestrator-auth-secret` exists in the correct namespace
2. **CRD not available**: Verify that Tekton and ArgoCD operators are installed and their CRDs are available
3. **RHDH not picking up configurations**: Check that the ConfigMaps have the correct label `rhdh.redhat.com/ext-config-sync: "true"`
4. **Tekton PipelineRuns are not successful**: Make sure that affinity-assistant is disabled in the TektonConfig CR.

### Checking Prerequisites

The chart will validate that required CRDs are available:
- `tekton.dev/v1/Task`
- `tekton.dev/v1/Pipeline` 
- `argoproj.io/v1alpha1/AppProject`

Check the Helm release notes after installation for any warnings about missing CRDs.

{{ template "chart.valuesSection" . }}

## Additional Resources

- [Red Hat Developer Hub Documentation](https://access.redhat.com/documentation/en-us/red_hat_developer_hub)
- [OpenShift Pipelines Documentation](https://docs.openshift.com/container-platform/latest/cicd/pipelines/understanding-openshift-pipelines.html)
- [OpenShift GitOps Documentation](https://docs.openshift.com/container-platform/latest/cicd/gitops/understanding-openshift-gitops.html)
